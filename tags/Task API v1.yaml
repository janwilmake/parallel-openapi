openapi: 3.1.0
info:
  title: Parallel API
  description: Parallel API
  contact:
    name: Parallel Support
    url: https://parallel.ai
    email: support@parallel.ai
  version: 0.1.2
servers:
  - url: https://api.parallel.ai
    description: Parallel API
paths:
  /v1/tasks/runs:
    post:
      tags:
        - Task API v1
      summary: Create a new task run for structured web research
      description: >-
        Initiates a task run that transforms natural language queries into
        precise, schema-compliant web outputs. The task run is created
        immediately in 'queued' status and begins processing asynchronously. You
        can specify input data (string or JSON), select a processor (lite, base,
        core, pro, ultra), and define structured output schemas. Beta features
        like Source Policy, MCP servers, and webhooks can be enabled by setting
        the 'parallel-beta' header with appropriate values.
      operationId: tasks_runs_post_v1_tasks_runs_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRunInput-Input'
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
              example:
                run_id: trun_9907962f83aa4d9d98fd7f4bf745d654
                status: queued
                is_active: true
                processor: core
                metadata:
                  my_key: my_value
                created_at: '2025-04-23T20:21:48.037943Z'
                modified_at: '2025-04-23T20:21:48.037943Z'
        '401':
          description: 'Unauthorized: invalid or missing credentials'
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: 'Unauthorized: invalid or missing credentials'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '402':
          description: 'Payment required: insufficient credit in account'
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: 'Payment required: insufficient credit in account'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Forbidden: invalid processor in request'
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: 'Forbidden: invalid processor in request'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: 'Unprocessable content: request validation error'
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: 'Unprocessable content: request validation error'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: 'Too many requests: quota temporarily exceeded'
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: 'Too many requests: quota temporarily exceeded'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codeSamples:
        - lang: Python
          source: |-
            from parallel import Parallel

            client = Parallel(
                api_key="My API Key",
            )
            task_run = client.task_run.create(
                input="What was the GDP of France in 2023?",
                processor="base",
            )
            print(task_run.run_id)
  /v1/tasks/runs/{run_id}:
    get:
      tags:
        - Task API v1
      summary: Retrieve current status of a task run
      description: >-
        Retrieves the current status and metadata for a specific task run by its
        run_id. This endpoint returns the task run object with current status
        (queued, running, completed, failed, etc.), processor information,
        timestamps, and any warnings or errors. The actual task results are
        available through the separate `/result` endpoint once the task is
        completed.
      operationId: tasks_runs_get_v1_tasks_runs__run_id__get
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
            title: Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
              example:
                run_id: trun_9907962f83aa4d9d98fd7f4bf745d654
                status: running
                is_active: true
                processor: core
                metadata:
                  my_key: my_value
                created_at: '2025-04-23T20:21:48.037943Z'
                modified_at: '2025-04-23T20:21:48.037943Z'
        '401':
          description: 'Unauthorized: invalid or missing credentials'
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: 'Unauthorized: invalid or missing credentials'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Run id not found
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: Run id not found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Request validation error
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: Request validation error
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codeSamples:
        - lang: Python
          source: |-
            from parallel import Parallel

            client = Parallel(
                api_key="My API Key",
            )
            task_run = client.task_run.retrieve(
                "run_id",
            )
            print(task_run.run_id)
  /v1/tasks/runs/{run_id}/input:
    get:
      tags:
        - Task API v1
      summary: Retrieve the original input data for a task run
      description: >-
        Retrieves the complete input data that was submitted when creating the
        specified task run. This includes the task specification (input/output
        schemas), the actual input data (text or JSON), processor selection, and
        any metadata that was provided. This endpoint is useful for debugging,
        auditing, or reconstructing the context of a completed task run.
      operationId: tasks_runs_input_get_v1_tasks_runs__run_id__input_get
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
            title: Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRunInput-Output'
              example:
                task_spec:
                  output_schema:
                    json_schema:
                      type: object
                      properties:
                        gdp:
                          type: string
                          description: >-
                            GDP in USD for the year, formatted like '$3.1
                            trillion (2023)'
                      required:
                        - gdp
                      additionalProperties: false
                    type: json
                  input_schema:
                    json_schema:
                      type: object
                      properties:
                        country:
                          type: string
                        year:
                          type: integer
                      required:
                        - country
                        - year
                      additionalProperties: false
                    type: json
                input:
                  country: France
                  year: 2023
                processor: core
                metadata:
                  my_key: my_value
        '401':
          description: 'Unauthorized: invalid or missing credentials'
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: 'Unauthorized: invalid or missing credentials'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Run id not found
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: Run id not found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Request validation error
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: Request validation error
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/tasks/runs/{run_id}/result:
    get:
      tags:
        - Task API v1
      summary: Retrieve task run results with citations and reasoning
      description: >-
        Retrieves the complete results of a task run, blocking until the task is
        completed if it's still in progress. The response includes both the
        structured output that conforms to your specified schema and the
        comprehensive "basis" - citations, reasoning, excerpts, and confidence
        levels that support each output field. This endpoint automatically
        handles polling and will wait up to the specified timeout (default 600
        seconds) for task completion.
      operationId: tasks_runs_result_get_v1_tasks_runs__run_id__result_get
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
            title: Run Id
        - name: timeout
          in: query
          required: false
          schema:
            type: integer
            default: 600
            title: Timeout
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRunResult'
              example:
                run:
                  run_id: trun_9907962f83aa4d9d98fd7f4bf745d654
                  status: completed
                  is_active: false
                  processor: core
                  metadata:
                    my_key: my_value
                  created_at: '2025-04-23T20:21:48.037943Z'
                  modified_at: '2025-04-23T20:21:48.037943Z'
                output:
                  basis: []
                  type: json
                  content:
                    gdp: $3.1 trillion (2023)
        '401':
          description: 'Unauthorized: invalid or missing credentials'
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: 'Unauthorized: invalid or missing credentials'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Run failed or run id not found
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: Run failed or run id not found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '408':
          description: Request timed out; run still active
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: Request timed out; run still active
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Request validation error
          content:
            application/json:
              example:
                type: error
                error:
                  ref_id: fcb2b4f3-c75e-4186-87bc-caa1a8381331
                  message: Request validation error
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codeSamples:
        - lang: Python
          source: |-
            from parallel import Parallel

            client = Parallel(
                api_key="My API Key",
            )
            task_run_result = client.task_run.result(
                run_id="run_id",
            )
            print(task_run_result.output)
components:
  schemas:
    ErrorResponse:
      properties:
        type:
          type: string
          enum:
            - error
          const: error
          title: Type
          description: Always 'error'.
          default: error
        error:
          allOf:
            - $ref: '#/components/schemas/Error'
          description: Error.
      type: object
      required:
        - error
      title: ErrorResponse
      description: Response object used for non-200 status codes.
    TaskRun:
      properties:
        run_id:
          type: string
          title: Run Id
          description: ID of the task run.
          examples:
            - trun_e0083b6aac0544eb8686e8d2a76533d2
        status:
          type: string
          enum:
            - queued
            - action_required
            - running
            - completed
            - failed
            - cancelling
            - cancelled
          title: Status
          description: Status of the run.
          examples:
            - queued
            - action_required
            - running
            - completed
            - failed
            - cancelling
            - cancelled
        is_active:
          type: boolean
          title: Is Active
          description: >-
            Whether the run is currently active, i.e. status is one of
            {'cancelling', 'queued', 'running'}.
        warnings:
          anyOf:
            - items:
                $ref: '#/components/schemas/shapley__search__tasks__api_v1__Warning'
              type: array
            - type: 'null'
          title: Warnings
          description: Warnings for the run, if any.
          examples:
            - []
        error:
          anyOf:
            - $ref: '#/components/schemas/Error'
            - type: 'null'
          description: Error for the run, present only if status is 'failed'.
        processor:
          type: string
          title: Processor
          description: Processor used for the run.
          examples:
            - base
        metadata:
          anyOf:
            - additionalProperties:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
                  - type: boolean
              type: object
            - type: 'null'
          title: Metadata
          description: User-provided metadata stored with the run.
          examples:
            - {}
        taskgroup_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Taskgroup Id
          description: ID of the taskgroup to which the run belongs.
        created_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Created At
          description: Timestamp of the creation of the task, as an RFC 3339 string.
          examples:
            - '2025-04-24T18:56:22.513132Z'
        modified_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Modified At
          description: >-
            Timestamp of the last modification to the task, as an RFC 3339
            string.
          examples:
            - '2025-04-24T18:56:22.513132Z'
      type: object
      required:
        - run_id
        - status
        - is_active
        - processor
        - created_at
        - modified_at
      title: TaskRun
      description: Status of a task run.
    TaskRunInput-Input:
      properties:
        task_spec:
          anyOf:
            - $ref: '#/components/schemas/TaskSpec'
            - type: 'null'
          description: Task specification.
        input:
          anyOf:
            - type: string
            - type: object
          title: Input
          description: Input to the task, either text or a JSON object.
          examples:
            - What was the GDP of France in 2023?
            - country: France
              year: 2023
        processor:
          type: string
          title: Processor
          description: Processor to use for the task.
          examples:
            - base
        metadata:
          anyOf:
            - additionalProperties:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
                  - type: boolean
              type: object
            - type: 'null'
          title: Metadata
          description: >-
            User-provided metadata stored with the run. Keys and values must be
            strings with a maximum length of 16 and 512 characters respectively.
      type: object
      required:
        - input
        - processor
      title: TaskRunInput
      description: Request to run a task.
    TaskRunInput-Output:
      properties:
        task_spec:
          anyOf:
            - $ref: '#/components/schemas/TaskSpec'
            - type: 'null'
          description: Task specification.
        input:
          anyOf:
            - type: string
            - type: object
          title: Input
          description: Input to the task, either text or a JSON object.
          examples:
            - What was the GDP of France in 2023?
            - country: France
              year: 2023
        processor:
          type: string
          title: Processor
          description: Processor to use for the task.
          examples:
            - base
        metadata:
          anyOf:
            - additionalProperties:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
                  - type: boolean
              type: object
            - type: 'null'
          title: Metadata
          description: >-
            User-provided metadata stored with the run. Keys and values must be
            strings with a maximum length of 16 and 512 characters respectively.
      type: object
      required:
        - input
        - processor
      title: TaskRunInput
      description: Request to run a task.
    TaskRunResult:
      properties:
        run:
          allOf:
            - $ref: '#/components/schemas/TaskRun'
          description: Task run object with status 'completed'.
        output:
          oneOf:
            - $ref: '#/components/schemas/TaskRunTextOutput'
            - $ref: '#/components/schemas/TaskRunJsonOutput'
          title: Output
          description: Output from the task conforming to the output schema.
          discriminator:
            propertyName: type
            mapping:
              json: '#/components/schemas/TaskRunJsonOutput'
              text: '#/components/schemas/TaskRunTextOutput'
      type: object
      required:
        - run
        - output
      title: TaskRunResult
      description: Result of a task run.
